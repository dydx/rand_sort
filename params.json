{"name":"Rand sort","tagline":"Array sorting with non-deterministic performance characterstics","body":"# Random Sorting\r\n\r\nThis is a really bad idea, but it was fun. Deterministic output, non-deterministic runtime performance.\r\n\r\nWe're monkey patching a predicate function for checking that a given Enumerable/Array is sorted and then patching in a new sorting \"algorithm\" that recursively shuffles the Enumerable/Array until it's sorted\r\n\r\nIt totally blows the stack after a length of about 8 on my machine. Could maybe use some TCO, but I don't know how to really do that just yet, so whatevers.\r\n\r\nDon't use this, ever, for anything. It was basically an excuse to learn about monkey patching which segued into how to write and build a gem.\r\n\r\nThere aren't any tests for it, either. Sue me\r\n\r\n# Usage\r\n\r\nIn your `Gemfile`:\r\n\r\n```\r\ngem 'rand_sort', :github => 'dydx/rand_sort'\r\n```\r\n\r\nthen just `require 'rand_sort'` in your project\r\n\r\nNow you can do things like this:\r\n\r\n```\r\narr = (1..6).to_a.shuffle\r\np arr.rsort\r\n```\r\n\r\nThe ability and right to do what you want is awesome, isn't it? Knowing the answer to \"should I actually do this?\" is also pretty awesome.\r\n\r\nDon't do this. Please\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}